
2023 interests:

Improve UI by alternating background colouring of save modification options?

Summarise whether maps are worth continuing, without showing the layout.
Count total pathable land, food, zombies? Chart them at each radius from CC? Summary in a starting radius?

----

Skip NavTree central circle when iterating over map?
Refactor PlayableArea iteration into a generator?
Rename Navigable to Traversable?


Theme change should replace pickable debris mats, and remove volcanos for non-Caustic themes?


Consider map generation modifier, of removing 2x2 edge of all rocks (and any 1x1 cracks/small water areas?). Could extend flood fill to generate the set of rock edge top-left-of-2x2 tiles.

Add an option to delete Backup file sets.

Add a cap to population scaling, to keep it below the ~65k soft TAB limit?

Offer to toggle Enable/Disable state of Mayors, Showing full map, etc? So users needn't manually edit to revert such options.

Potentially decrypt any save file upon selection, in order to assess and present the current state? Requires triggering the reflector popup though.
Check the time elapsed in a save before permitting some changes?
Check if any changes have actually been made by a given option set, and thus if repacking can be skipped?

Also update Info file, just to be consistent with Data file?

Consider approaches to keeping Backups TreeView sorted by baseName, then lastWriteUtc. Either via custom sorter, or careful insertion of single backups when generated.

Use state Enums, FSM and change listeners for GUI/TABSAT when modifying file, and ReflectorManager?


Provide an option to leave the Reflector deployed, and verify whether it is during ReflectorManager initialisation? Including file checksum?


Add a blank "Log" Tab Control page, which when chosen collapses the control's height and the enclosing SplitContainer.Panel's, to maximise the log panel's height?


Refactor TABSAT's own Console...WriteLine() to use a UI textfield/list, at the bottom of the UI/on another pane?


Would TABReflector need to technically be a graphical application, with a hidden window, in order for Process.WaitForInputIdle() to best solve the Sleep() race condition?


Expand use of Octokit.net, or something like Squirrel.Windows, for auto-updating TABSAT from Github?

Dynamically generate some duplicated UI elements, such as CheckBox and NumericUpDown per scalable zombie type?

----

Options for Mutant modification/max % restoration:

Relocate mutants onto nearest giant per mutant;

Remove/Relocate if within l distance of CC? To those Giants/Mutants at least l distance from CC?

----

Wide-ranging editor options:

--
Make games harder:

Remove Mutants and/or Giant minimap icons?

Remove all Pickable resources & reclaimable buildings (and Fortress walls)? To remove potential early Radar vision or resources chiefly accessed via kiting?

Possibly add a script element (that constantly loops?) to spawns a new zombie per troop loss, with specific loss type to zombie spawned pairing. E.g. Harpy for each ranger, Spitter for each Sniper, Mutant for each Thanatos?
Might have to have a pseudo daily/8-hourly/faster wave, that spawns unit types & numbers depending on a diff between previous and current troop counts? So quickly replaced units might not trigger snowballing?


--
Could affect difficulty either way:

Offer to make (population) scaling non-uniform, but based on distance from CC?
Or applicable per compass quadrant?

Swap the locations of different types to affect distribution difficulty?
Specifically, could:
place most/all special infected in concentric rings, e.g. Fatties closest, then Spitters, then Harpies?
place most/all Spitters in 1 cardinal direction, all Harpies in another, all Fatties, etc?

Swap the closest Mutants with the farthest Giants?

Alter the size and composition of waves?
Alter the number and #timing of waves?

Set certain mayors as already chosen? To benefit or miss out on their benefits, depending how they're handled.

Alter the starting troops?

Add the scripted politics systems/card games from some custom maps?

Apply a multiplier all (non-huge) map zombies' life (e.g. 0.8, 1.5)? Or per zombie type. Would need to test whether exceeding the base full life value for a given type causes issues beyond displaying e.g. 150/100, as this probably isn't how modded mayors effectively alter this value.

Investigate scripting a custom CC button that effectively toggles the game pace between normal and fast. Unit speed & dps, and tech research speed, seems to be modifiable in a single game (see some custom maps), so perhaps a script could apply a pair of factors to these stats, and waves could be triggered rather than purely scheduled if schedules can't be modified?

Clear straight/spiral paths from the CC to the edges in cardinal directions?

Mostly for Caustic generator: Try to detect if entire ~halves (N/S/E/W) are unpopulated (& unpathable). If so, mirror the terrain w.r.t the CC, and 50/50 relocate, or 100% duplicate, zombies and VODs/oil, etc.

--
Make games easier:

Remove Fog over zombies, either all or only certain type(s)? And/or over VOD buildings?
Remove Fog in a random pattern, would result in a spray effect? Or a non-uniform version based on CC distance?
Remove Fog in a geometric pattern, such as radiating narrow arcs like lighthouse beams, or a spiral?

Reposition Ravens to indicate direction to Mutants/Giants/VODs?
Or use sign post assets from custom/campaign maps?
For VODs, convert each building relative position from CC into an angle, consolidate similar-enough angles into a single marker.

Spawn new pickables by the CC? Almost redundant w.r.t. granting Extra Supplies and filling storage.
Or relocate existing pickables to be by the CC.

Duplicate all existing resource-producing buildings (not housing).
Duplicate all Oil Pools.

Make all existing troops veterans.

Add the scripted pseudo-train system from some custom maps, for regular delivery of chosen resources?

Garrison all troops to towers. Allocate to nearest per troop? Or just tower-most-distant-from-CC first?
Instantly move up to 4 per tower (and set state to garissoned), or set state as though clicked and have them start walking?

----

Other features:

Use a series of auto-backed-up saves during a game to chart the player's economy, pause ratio, zombie kill rate, potential turret & army dps, etc.
Charts could be compared across games to see averages and long term trends.

Offer to apply or revert Modded Mayors game-wide rules change?
Or other complete rebalancing mods, should someone make one.

Also Sound/Texture/Font packs such as https://www.reddit.com/r/TheyAreBillions/comments/ekc8gx/starcraft_warcraft_diablo2_dow2_soundpacks_like_a/
